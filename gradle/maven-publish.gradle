/**
 * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */
apply plugin: 'maven-publish'
apply plugin: 'signing'

if (project.hasProperty("doSigning")) {
    if (doSigning == "true") {
        
        if (!project.hasProperty('signing.secretKeyRingFile') || 
                project.property('signing.secretKeyRingFile').toString().trim().equals("")) {
            
            // Default the secretKeyRingFile to the current user's home
            project.setProperty("signing.secretKeyRingFile",
                    project.file("${System.getProperty("user.home")}/.gnupg/secring.gpg").absolutePath)
            println("*** Done setting secring file **")
        }
        signing {
            sign publishing.publications
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'Pravega Keycloak Adapter (Client)'
                url = 'http://pravega.io'
                scm {
                    url = 'https://github.com/pravega/pravega-keycloak/tree/master'
                    connection = 'scm:git:git://github.com/pravega/pravega-keycloak.git'
                    developerConnection = 'scm:git:https://github.com/pravega/pravega-keycloak.git'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'rsharda'
                        name = 'Ravi Sharda'
                    }
                }
            }

            // Declares coordinates for publishing
            groupId = 'io.pravega'
            artifactId = 'pravega-keycloak-client'

            
            // Add artifacts to the list of publications
            artifact source: shadowJar, classifier: null
            artifact sourceJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            def releasesRepoUrl
            def snapshotsRepoUrl
            
            logger.info("publishRepo is: {}", publishRepo)
            if (publishRepo == "mavenCentral") {
                name = publishRepo
                snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            } else if (publishRepo == "jcentral") {
                name = publishRepo
                snapshotsRepoUrl = "https://oss.jfrog.org/artifactory/oss-snapshot-local/"
                releasesRepoUrl = "https://oss.jfrog.org/artifactory/oss-release-local/"
            } else if (publishRepo == "localFileRepo") {
                name = publishRepo
                snapshotsRepoUrl = "file://${buildDir}/repo/snapshots"
                releasesRepoUrl = "file://${buildDir}/repo/releases"
            } else {
                name = "Custom"
                snapshotsRepoUrl = publishUrlForSnapshots
                releasesRepoUrl = publishUrlForSnapshots
            }
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            
            // Repos with URL starting with "file://" don't support credentials.
            if (project.hasProperty("publishUsername") && !publishRepo.trim().equalsIgnoreCase("localFileRepo")) {
                logger.info("Setting credentials")
                credentials {
                    username = publishUsername
                    password = publishPassword
                }
            }
        }
    }
}