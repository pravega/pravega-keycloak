/**
 * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.ajoberstar.grgit' version '3.1.1'
}

apply from: "$rootDir/gradle/version.gradle"

allprojects {
    apply plugin: 'jacoco'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        maven {
            url "https://maven.pkg.github.com/pravega/pravega"
            credentials {
                username = "pravega-public"
                password = "\u0067\u0068\u0070\u005F\u0048\u0034\u0046\u0079\u0047\u005A\u0031\u006B\u0056\u0030\u0051\u0070\u006B\u0079\u0058\u006D\u0035\u0063\u0034\u0055\u0033\u006E\u0032\u0065\u0078\u0039\u0032\u0046\u006E\u0071\u0033\u0053\u0046\u0076\u005A\u0049"
            }
        }
    }

    group "io.pravega"
    sourceCompatibility = '1.8'


    // Creates a Jar with Java source files
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }
    
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    
    dependencies {
        implementation platform("org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}")
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
    }
    check.dependsOn jacocoTestReport
}

project('client') {
    apply from: "$rootDir/gradle/maven-publish.gradle"

    tasks.withType(PublishToMavenRepository) {
        doFirst {
            println("Publishing ${publication.groupId}:${publication.artifactId}:${publication.version} to ${repository.url}")
        }
    }

    configurations {
        implementation {
            exclude group: 'org.projectlombok', module: 'lombok'
        }
        testImplementation {
            extendsFrom compileOnly
        }
    }

    dependencies {
        compileOnly "org.slf4j:slf4j-api:${slf4jVersion}"
        compileOnly "io.pravega:pravega-shared-security:${pravegaVersion}"
        implementation "org.keycloak:keycloak-authz-client"
        implementation "com.google.guava:guava:${guavaVersion}"

        testImplementation "org.keycloak:keycloak-adapter-core"
        testImplementation "junit:junit:${junitVersion}"
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    }

    task relocateShadowJar(type: ConfigureShadowRelocation) {
        target = tasks.shadowJar
        prefix = "io.pravega.keycloak"
    }
    shadowJar {
        mergeServiceFiles()
    }
    jar.enabled = false
    tasks.shadowJar.dependsOn tasks.relocateShadowJar
    tasks.build.dependsOn tasks.shadowJar
}
